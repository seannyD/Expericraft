public static class TileEntityCustom extends TileEntityLockableLoot
{
	
	private NonNullList<ItemStack> stacks = NonNullList.<ItemStack> withSize(%inv%, ItemStack.EMPTY);
	
	public int getSizeInventory() {
		return %inv%;
	}
	
	public boolean isEmpty() {
		for (ItemStack itemstack : this.stacks) {
			if (!itemstack.isEmpty()) {
				return false;
			}
		}
	
		return true;
	}
	
	public String getName() {
		return this.hasCustomName() ? this.customName : "container.%name%";
	}
	
	public void readFromNBT(NBTTagCompound compound) {
		super.readFromNBT(compound);
		this.stacks = NonNullList.<ItemStack> withSize(this.getSizeInventory(), ItemStack.EMPTY);
	
		if (!this.checkLootAndRead(compound)) {
			ItemStackHelper.loadAllItems(compound, this.stacks);
		}
	
		if (compound.hasKey("CustomName", 8)) {
			this.customName = compound.getString("CustomName");
		}
	}
	
	public NBTTagCompound writeToNBT(NBTTagCompound compound) {
		super.writeToNBT(compound);
	
		if (!this.checkLootAndWrite(compound)) {
			ItemStackHelper.saveAllItems(compound, this.stacks);
		}
	
		if (this.hasCustomName()) {
			compound.setString("CustomName", this.customName);
		}
	
		return compound;
	}
	
	public int getInventoryStackLimit() {
		return %invs%;
	}
	
	public String getGuiID() {
		return "minecraft:%name%";
	}
	
	public Container createContainer(InventoryPlayer playerInventory, EntityPlayer playerIn) {
		this.fillWithLoot(playerIn);
		return new ContainerDispenser(playerInventory, this);
	}
	
	protected NonNullList<ItemStack> getItems() {
		return this.stacks;
	}
	
}